// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.Item;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests
{
    /// <summary>
    /// Builds and executes requests for operations under \data-connector\v1\accounts\{accountId}\requests
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RequestsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Autodesk.ACC.DataConnector.dataConnector.v1.accounts.item.requests.item collection</summary>
        /// <param name="position">The ID of the specified request</param>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.Item.WithRequestItemRequestBuilder"/></returns>
        public global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.Item.WithRequestItemRequestBuilder this[Guid position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("requestId", position);
                return new global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.Item.WithRequestItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the Autodesk.ACC.DataConnector.dataConnector.v1.accounts.item.requests.item collection</summary>
        /// <param name="position">The ID of the specified request</param>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.Item.WithRequestItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.Item.WithRequestItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("requestId", position);
                return new global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.Item.WithRequestItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RequestsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/data-connector/v1/accounts/{accountId}/requests{?filter%5Bfield_to_filter%5D*,limit*,offset*,sort*,sortFields*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RequestsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/data-connector/v1/accounts/{accountId}/requests{?filter%5Bfield_to_filter%5D*,limit*,offset*,sort*,sortFields*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns an array of data requests that the authenticated user has created in the specified account. The user must have executive overview or project administrator permissions.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsGetResponse?> GetAsRequestsGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder.RequestsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsGetResponse> GetAsRequestsGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder.RequestsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsGetResponse>(requestInfo, global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsGetResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns an array of data requests that the authenticated user has created in the specified account. The user must have executive overview or project administrator permissions.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use GetAsRequestsGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse?> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder.RequestsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder.RequestsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse>(requestInfo, global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates a data request for an authenticated user. The user can optionally limit the request to one project. The user must have executive overview or project administrator permissions.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostResponse?> PostAsRequestsPostResponseAsync(global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostResponse> PostAsRequestsPostResponseAsync(global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostResponse>(requestInfo, global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates a data request for an authenticated user. The user can optionally limit the request to one project. The user must have executive overview or project administrator permissions.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use PostAsRequestsPostResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse?> PostAsync(global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse> PostAsync(global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse>(requestInfo, global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns an array of data requests that the authenticated user has created in the specified account. The user must have executive overview or project administrator permissions.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder.RequestsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder.RequestsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Creates a data request for an authenticated user. The user can optionally limit the request to one project. The user must have executive overview or project administrator permissions.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns an array of data requests that the authenticated user has created in the specified account. The user must have executive overview or project administrator permissions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RequestsRequestBuilderGetQueryParameters 
        {
            /// <summary>Return only the data requests in which the specified field has the specified value. Use the following format in the endpoint URL: ``filter[field_to_filter]=_filter_value_``.Note that you can provide multiple request filters in the URL, but you may not filter on multiple values of the same field.Possible ``field_to_filter`` values: ``projectId``, ``createdAt``, ``updatedAt``, ``scheduleInterval``, ``reocurringInterval``, ``effectiveFrom``, ``effectiveTo``, ``isActive``, ``startDate``, ``endDate``. You can also retrieve all data requests in the current account by specifying ``filter[projectId]=null``.For the ``createdAt`` and ``updatedAt`` fields (which accept a date range), specify the range in the form *firstdate..lastdate*, in ISO 8601 format with the time required. You can alternatively omit the first date (for example, to get everything on or before June 1, 2019 the range would be ``..2019-06-01T23:59:59.999Z``). You can also omit the last date (for example, to get everything after June 1, 2019 the range would be ``2019-06-01T00:00:00.000Z..``)Additional notes on using ``startDate`` and ``endDate``:- If you provide only ``startDate`` or ``endDate`` (but not both), Data Connector uses that single date for both ``startDate`` and ``endDate``.- If you request more than the Maximum Date Range Allowed for an extraction, the default date range as documented in the schema documentation is returned.- For the ``activities`` service group, data replication can be delayed up to 20 minutes, so your requests should account for that delay.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bfield_to_filter%5D")]
            public string? FilterfieldToFilter { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bfield_to_filter%5D")]
            public string FilterfieldToFilter { get; set; }
#endif
            /// <summary>The number of data connector objects to return. Default value: 20</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>The number of data objects to skip before starting to starting to collect the result set. Default value: 0</summary>
            [QueryParameter("offset")]
            public int? Offset { get; set; }
            /// <summary>The sort order of returned data connector objects. Possible values: ``asc`` ascending by date (earliest to latest date), ``desc`` descending by date (latest to earliest date).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string Sort { get; set; }
#endif
            /// <summary>A string of comma-separated names of the fields by which to sort the returned data requests. The results are sorted by the first field, then by the second field, and so on. Requests are sorted by each field in ascending order by default; you can prepend any field name with a hyphen ( ``-`` ) to sort in descending order. Invalid fields and whitespaces are ignored.Possible values: ``isActive``, ``accountId``, ``createdBy``, ``createdByEmail``, ``createdAt``, ``updatedBy``, ``updatedAt``, ``scheduleInterval``, ``reoccuringInterval``, ``effectiveFrom``, ``effectiveTo``, ``startDate``, ``endDate``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sortFields")]
            public string? SortFields { get; set; }
#nullable restore
#else
            [QueryParameter("sortFields")]
            public string SortFields { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RequestsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.ACC.DataConnector.DataConnector.V1.Accounts.Item.Requests.RequestsRequestBuilder.RequestsRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RequestsRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
