// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithUser_GetResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>| Short description about the user|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AboutMe { get; set; }
#nullable restore
#else
        public string AboutMe { get; set; }
#endif
        /// <summary>Account ID</summary>
        public Guid? AccountId { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>| User&apos;s address line 1|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine1 { get; set; }
#nullable restore
#else
        public string AddressLine1 { get; set; }
#endif
        /// <summary>| User&apos;s address line 2|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine2 { get; set; }
#nullable restore
#else
        public string AddressLine2 { get; set; }
#endif
        /// <summary>| City in which user is located|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>| Company information from the Autodesk user profile|| Max length: 255|| Note that this is different from company in BIM 360.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Company { get; set; }
#nullable restore
#else
        public string Company { get; set; }
#endif
        /// <summary>The user&apos;s default company ID in BIM 360</summary>
        public Guid? CompanyId { get; set; }
        /// <summary>The name of the user&apos;s default company name in BIM 360</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyName { get; set; }
#nullable restore
#else
        public string CompanyName { get; set; }
#endif
        /// <summary>| Country for this user|| Refer to the ``country`` list in the `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse_country? Country { get; set; }
        /// <summary>| ``YYYY-MM-DDThh:mm:ss.sssZ`` format</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>| The user&apos;s default role.|</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultRole { get; set; }
#nullable restore
#else
        public string DefaultRole { get; set; }
#endif
        /// <summary>| The ID of the default role.|</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultRoleId { get; set; }
#nullable restore
#else
        public string DefaultRoleId { get; set; }
#endif
        /// <summary>| User&apos;s email|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>| User&apos;s first name|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>User ID</summary>
        public Guid? Id { get; set; }
        /// <summary>| URL for user&apos;s profile image|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>| Industry information for user|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Industry { get; set; }
#nullable restore
#else
        public string Industry { get; set; }
#endif
        /// <summary>| User&apos;s job title|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobTitle { get; set; }
#nullable restore
#else
        public string JobTitle { get; set; }
#endif
        /// <summary>| User&apos;s last name|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>The time and date of the user&apos;s most recent sign-in, in ISO 8601 format (``YYYY-MM-DDThh:mm:ss.sssZ``). Note t</summary>
        public DateTimeOffset? LastSignIn { get; set; }
        /// <summary>| Default display name|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>| Nick name for user|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Nickname { get; set; }
#nullable restore
#else
        public string Nickname { get; set; }
#endif
        /// <summary>| Contact phone number for the user|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>| Postal code for the user&apos;s location|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; set; }
#nullable restore
#else
        public string PostalCode { get; set; }
#endif
        /// <summary>| The role of the user in the account|| Possible values:| ``account_admin``: user has BIM 360 account administration access| ``account_user`` : normal project user| ``project_admin``: user has Project administration privileges at a service level</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Role { get; set; }
#nullable restore
#else
        public string Role { get; set; }
#endif
        /// <summary>| State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse_state_or_province? StateOrProvince { get; set; }
        /// <summary>| Status of the user in the system|| Possible values:| ``active``: user is active and has logged into the system sucessfully| ``inactive``: user is disabled| ``pending``: user is invited and is yet to accept the invitation| ``not_invited``: user is not invited</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>| User&apos;s Autodesk ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uid { get; set; }
#nullable restore
#else
        public string Uid { get; set; }
#endif
        /// <summary>| ``YYYY-MM-DDThh:mm:ss.sssZ`` format</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse"/> and sets the default values.
        /// </summary>
        public WithUser_GetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "about_me", n => { AboutMe = n.GetStringValue(); } },
                { "account_id", n => { AccountId = n.GetGuidValue(); } },
                { "address_line_1", n => { AddressLine1 = n.GetStringValue(); } },
                { "address_line_2", n => { AddressLine2 = n.GetStringValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "company", n => { Company = n.GetStringValue(); } },
                { "company_id", n => { CompanyId = n.GetGuidValue(); } },
                { "company_name", n => { CompanyName = n.GetStringValue(); } },
                { "country", n => { Country = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse_country>(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "default_role", n => { DefaultRole = n.GetStringValue(); } },
                { "default_role_id", n => { DefaultRoleId = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "first_name", n => { FirstName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "image_url", n => { ImageUrl = n.GetStringValue(); } },
                { "industry", n => { Industry = n.GetStringValue(); } },
                { "job_title", n => { JobTitle = n.GetStringValue(); } },
                { "last_name", n => { LastName = n.GetStringValue(); } },
                { "last_sign_in", n => { LastSignIn = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "nickname", n => { Nickname = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "postal_code", n => { PostalCode = n.GetStringValue(); } },
                { "role", n => { Role = n.GetStringValue(); } },
                { "state_or_province", n => { StateOrProvince = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse_state_or_province>(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "uid", n => { Uid = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("about_me", AboutMe);
            writer.WriteGuidValue("account_id", AccountId);
            writer.WriteStringValue("address_line_1", AddressLine1);
            writer.WriteStringValue("address_line_2", AddressLine2);
            writer.WriteStringValue("city", City);
            writer.WriteStringValue("company", Company);
            writer.WriteGuidValue("company_id", CompanyId);
            writer.WriteStringValue("company_name", CompanyName);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse_country>("country", Country);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("default_role", DefaultRole);
            writer.WriteStringValue("default_role_id", DefaultRoleId);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("first_name", FirstName);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("image_url", ImageUrl);
            writer.WriteStringValue("industry", Industry);
            writer.WriteStringValue("job_title", JobTitle);
            writer.WriteStringValue("last_name", LastName);
            writer.WriteDateTimeOffsetValue("last_sign_in", LastSignIn);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("nickname", Nickname);
            writer.WriteStringValue("phone", Phone);
            writer.WriteStringValue("postal_code", PostalCode);
            writer.WriteStringValue("role", Role);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Users.Item.WithUser_GetResponse_state_or_province>("state_or_province", StateOrProvince);
            writer.WriteStringValue("status", Status);
            writer.WriteStringValue("uid", Uid);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
