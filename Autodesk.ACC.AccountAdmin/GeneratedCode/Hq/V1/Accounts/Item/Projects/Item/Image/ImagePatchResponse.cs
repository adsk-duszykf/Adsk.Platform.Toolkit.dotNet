// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ImagePatchResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Account ID</summary>
        public Guid? AccountId { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>| Project address line 1|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine1 { get; set; }
#nullable restore
#else
        public string AddressLine1 { get; set; }
#endif
        /// <summary>| Project address line 2|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine2 { get; set; }
#nullable restore
#else
        public string AddressLine2 { get; set; }
#endif
        /// <summary>The business unit ID of this project</summary>
        public Guid? BusinessUnitId { get; set; }
        /// <summary>| City in which project is located|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>| Type of construction|| Refer to the ``construction_type`` list in the `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_construction_type? ConstructionType { get; set; }
        /// <summary>| Contract Type for your project|| Refer to the ``contract_type`` list in the `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_contract_type? ContractType { get; set; }
        /// <summary>| Country for this project|| Refer to the ``country`` list in the `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_country? Country { get; set; }
        /// <summary>| Currency for project value|| Refer to the ``currency`` list in the `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_currency? Currency { get; set; }
        /// <summary>| The ending date of a project; must be later than ``start_date``|| Format: ``YYYY-MM-DD``</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDate { get; set; }
#nullable restore
#else
        public string EndDate { get; set; }
#endif
        /// <summary>Project ID</summary>
        public Guid? Id { get; set; }
        /// <summary>| Project job number to connect a BIM 360 project to project or job in a financial or ERP system.|| Max length: 100</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobNumber { get; set; }
#nullable restore
#else
        public string JobNumber { get; set; }
#endif
        /// <summary>| Language of the project; applicable to the BIM 360 Field service only|| Possible values:| ``en``: English| ``de``: German</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_language? Language { get; set; }
        /// <summary>Timestamp of the last sign in, ``YYYY-MM-DDThh:mm:ss.sssZ`` format</summary>
        public DateTimeOffset? LastSignIn { get; set; }
        /// <summary>| Name of the project| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>| Postal code for the project location|| Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; set; }
#nullable restore
#else
        public string PostalCode { get; set; }
#endif
        /// <summary>| The type of project; accepts preconfigured and customized project types|| Max length: 255|| Refer to the preconfigured ``project_type`` list in| the `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectType { get; set; }
#nullable restore
#else
        public string ProjectType { get; set; }
#endif
        /// <summary>| The starting date of a project; must be earlier than ``end_date``|| Format: ``YYYY-MM-DD``</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDate { get; set; }
#nullable restore
#else
        public string StartDate { get; set; }
#endif
        /// <summary>| State or province in which project is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value; see the valid values in the ``state_or_province`` list inthe `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_state_or_province? StateOrProvince { get; set; }
        /// <summary>| The status of project.|| Possible values:| ``active``: project is active with at least one project admin added| ``pending``: project has been created but pending becuase no project admin added| ``inactive``: project is suspended| ``archived``: project is archived and displayed only in the archived list</summary>
        public global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_status? Status { get; set; }
        /// <summary>| Time zone for this project|| Refer to the ``timezone`` list in the `Parameters &lt;/en/docs/bim360/v1/overview/parameters&gt;`_ guide.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timezone { get; set; }
#nullable restore
#else
        public string Timezone { get; set; }
#endif
        /// <summary>Monetary value of the project</summary>
        public double? Value { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse"/> and sets the default values.
        /// </summary>
        public ImagePatchResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_id", n => { AccountId = n.GetGuidValue(); } },
                { "address_line_1", n => { AddressLine1 = n.GetStringValue(); } },
                { "address_line_2", n => { AddressLine2 = n.GetStringValue(); } },
                { "business_unit_id", n => { BusinessUnitId = n.GetGuidValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "construction_type", n => { ConstructionType = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_construction_type>(); } },
                { "contract_type", n => { ContractType = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_contract_type>(); } },
                { "country", n => { Country = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_country>(); } },
                { "currency", n => { Currency = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_currency>(); } },
                { "end_date", n => { EndDate = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "job_number", n => { JobNumber = n.GetStringValue(); } },
                { "language", n => { Language = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_language>(); } },
                { "last_sign_in", n => { LastSignIn = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "postal_code", n => { PostalCode = n.GetStringValue(); } },
                { "project_type", n => { ProjectType = n.GetStringValue(); } },
                { "start_date", n => { StartDate = n.GetStringValue(); } },
                { "state_or_province", n => { StateOrProvince = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_state_or_province>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_status>(); } },
                { "timezone", n => { Timezone = n.GetStringValue(); } },
                { "value", n => { Value = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("account_id", AccountId);
            writer.WriteStringValue("address_line_1", AddressLine1);
            writer.WriteStringValue("address_line_2", AddressLine2);
            writer.WriteGuidValue("business_unit_id", BusinessUnitId);
            writer.WriteStringValue("city", City);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_construction_type>("construction_type", ConstructionType);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_contract_type>("contract_type", ContractType);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_country>("country", Country);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_currency>("currency", Currency);
            writer.WriteStringValue("end_date", EndDate);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("job_number", JobNumber);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_language>("language", Language);
            writer.WriteDateTimeOffsetValue("last_sign_in", LastSignIn);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("postal_code", PostalCode);
            writer.WriteStringValue("project_type", ProjectType);
            writer.WriteStringValue("start_date", StartDate);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_state_or_province>("state_or_province", StateOrProvince);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Hq.V1.Accounts.Item.Projects.Item.Image.ImagePatchResponse_status>("status", Status);
            writer.WriteStringValue("timezone", Timezone);
            writer.WriteDoubleValue("value", Value);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
