// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles
{
    /// <summary>
    /// Builds and executes requests for operations under \construction\admin\v1\accounts\{accountId}\users\{userId}\roles
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RolesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RolesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/construction/admin/v1/accounts/{accountId}/users/{userId}/roles{?fields*,filterTextMatch*,filter%5Bname%5D*,filter%5BprojectId%5D*,filter%5Bstatus%5D*,limit*,offset*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RolesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/construction/admin/v1/accounts/{accountId}/users/{userId}/roles{?fields*,filterTextMatch*,filter%5Bname%5D*,filter%5BprojectId%5D*,filter%5Bstatus%5D*,limit*,offset*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns the roles assigned to a specific user across the projects they belong to.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesGetResponse?> GetAsRolesGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder.RolesRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesGetResponse> GetAsRolesGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder.RolesRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesGetResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesGetResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns the roles assigned to a specific user across the projects they belong to.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use GetAsRolesGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesResponse?> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder.RolesRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesResponse> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder.RolesRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns the roles assigned to a specific user across the projects they belong to.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder.RolesRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder.RolesRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns the roles assigned to a specific user across the projects they belong to.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RolesRequestBuilderGetQueryParameters 
        {
            /// <summary>A comma-separated list of response fields to include.Defaults to all fields if not specified.Use this parameter to reduce the response size by retrieving only the fields you need.Possible values:``projectIds`` – Projects where the user holds this role``name`` – Role name``status`` – Role status (active or inactive)``key`` – Internal key used to translate the role name``createdAt`` – Timestamp when the role was created``updatedAt`` – Timestamp when the role was last updated</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("fields")]
            public string[]? Fields { get; set; }
#nullable restore
#else
            [QueryParameter("fields")]
            public string[] Fields { get; set; }
#endif
            /// <summary>Filters roles by name.By default, this performs a partial match (case-insensitive).You can control how the match behaves by using the ``filterTextMatch`` parameter. For example, to match only names that start with (`startsWith`), end with (`endsWith`), or exactly equal (`equals`) the provided value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bname%5D")]
            public string? Filtername { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bname%5D")]
            public string Filtername { get; set; }
#endif
            /// <summary>A list of project IDs. Only results where the user is associated with one or more of the specified projects are returned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BprojectId%5D")]
            public string[]? FilterprojectId { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BprojectId%5D")]
            public string[] FilterprojectId { get; set; }
#endif
            /// <summary>Filters roles by their status. Accepts one or more of the following values:``active`` – The role is currently in use.``inactive`` – The role has been removed or is no longer in use.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bstatus%5D")]
            public string[]? Filterstatus { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bstatus%5D")]
            public string[] Filterstatus { get; set; }
#endif
            /// <summary>Specifies how text-based filters should match values in supported fields.This parameter can be used in any endpoint that supports text-based filtering (e.g., ``filter[name]``, ``filter[jobNumber]``, ``filter[companyName]``, etc.).Possible values:``contains`` (default) – Matches if the field contains the specified text anywhere``startsWith`` – Matches if the field starts with the specified text``endsWith`` – Matches if the field ends with the specified text``equals`` – Matches only if the field exactly matches the specified textMatching is case-insensitive.Wildcards and regular expressions are not supported.</summary>
            [Obsolete("This property is deprecated, use FilterTextMatchAsGetFilterTextMatchQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filterTextMatch")]
            public string? FilterTextMatch { get; set; }
#nullable restore
#else
            [QueryParameter("filterTextMatch")]
            public string FilterTextMatch { get; set; }
#endif
            /// <summary>Specifies how text-based filters should match values in supported fields.This parameter can be used in any endpoint that supports text-based filtering (e.g., ``filter[name]``, ``filter[jobNumber]``, ``filter[companyName]``, etc.).Possible values:``contains`` (default) – Matches if the field contains the specified text anywhere``startsWith`` – Matches if the field starts with the specified text``endsWith`` – Matches if the field ends with the specified text``equals`` – Matches only if the field exactly matches the specified textMatching is case-insensitive.Wildcards and regular expressions are not supported.</summary>
            [QueryParameter("filterTextMatch")]
            public global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.GetFilterTextMatchQueryParameterType? FilterTextMatchAsGetFilterTextMatchQueryParameterType { get; set; }
            /// <summary>The maximum number of records to return in the response.Default: ``20``Minimum: ``1``Maximum: ``200`` (If a larger value is provided, only 200 records are returned)</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>The index of the first record to return.Used for pagination in combination with the ``limit`` parameter.Example: ``limit=20`` and ``offset=40`` returns records 41–60.</summary>
            [QueryParameter("offset")]
            public int? Offset { get; set; }
            /// <summary>Sorts the results by one or more fields.Each field can be followed by a direction modifier:``asc`` – Ascending order (default)``desc`` – Descending orderPossible values: ``name``, ``createdAt``, ``updatedAt``.Default sort: ``name asc``Example: ``sort=name,updatedAt desc``</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RolesRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Roles.RolesRequestBuilder.RolesRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
