// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products
{
    /// <summary>
    /// Builds and executes requests for operations under \construction\admin\v1\accounts\{accountId}\users\{userId}\products
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ProductsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ProductsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/construction/admin/v1/accounts/{accountId}/users/{userId}/products{?fields*,filter%5Bkey%5D*,filter%5BprojectId%5D*,limit*,offset*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ProductsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/construction/admin/v1/accounts/{accountId}/users/{userId}/products{?fields*,filter%5Bkey%5D*,filter%5BprojectId%5D*,limit*,offset*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns a list of ACC products the user is associated with in their assigned projects.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsGetResponse?> GetAsProductsGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder.ProductsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsGetResponse> GetAsProductsGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder.ProductsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsGetResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsGetResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a list of ACC products the user is associated with in their assigned projects.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use GetAsProductsGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsResponse?> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder.ProductsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsResponse> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder.ProductsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a list of ACC products the user is associated with in their assigned projects.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder.ProductsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder.ProductsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns a list of ACC products the user is associated with in their assigned projects.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ProductsRequestBuilderGetQueryParameters 
        {
            /// <summary>List of fields to return in the response. Defaults to all fields.Possible values: ``projectIds``, ``name`` and ``icon``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("fields")]
            public string[]? Fields { get; set; }
#nullable restore
#else
            [QueryParameter("fields")]
            public string[] Fields { get; set; }
#endif
            /// <summary>Filters the list of products by product key â€” a machine-readable identifier for an ACC product (such as ``docs``, ``build``, or ``cost``).You can specify one or more keys to return only those products the user is associated with.Example: ``filter[key]=docs,build``Possible values: ``accountAdministration``, ``autoSpecs``, ``build``, ``buildingConnected``, ``capitalPlanning``, ``cloudWorksharing``, ``cost``, ``designCollaboration``, ``docs``, ``financials``, ``insight``, ``modelCoordination``, ``projectAdministration``, ``takeoff``, and ``workshopxr``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bkey%5D")]
            public string[]? Filterkey { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bkey%5D")]
            public string[] Filterkey { get; set; }
#endif
            /// <summary>A list of project IDs. Only results where the user is associated with one or more of the specified projects are returned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BprojectId%5D")]
            public string[]? FilterprojectId { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BprojectId%5D")]
            public string[] FilterprojectId { get; set; }
#endif
            /// <summary>The maximum number of records to return in the response.Default: ``20``Minimum: ``1``Maximum: ``200`` (If a larger value is provided, only 200 records are returned)</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>The index of the first record to return.Used for pagination in combination with the ``limit`` parameter.Example: ``limit=20`` and ``offset=40`` returns records 41â€“60.</summary>
            [QueryParameter("offset")]
            public int? Offset { get; set; }
            /// <summary>The list of fields to sort by.Each property can be followed by a direction modifier of either ``asc`` (ascending) or ``desc`` (descending). The default is ``asc``.Possible values:  ``name``.Default is the order in database.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ProductsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Accounts.Item.Users.Item.Products.ProductsRequestBuilder.ProductsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
