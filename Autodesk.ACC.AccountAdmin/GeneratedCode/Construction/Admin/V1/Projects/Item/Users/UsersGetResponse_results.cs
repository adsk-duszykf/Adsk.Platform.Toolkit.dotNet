// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UsersGetResponse_results : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>A short bio about the user. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AboutMe { get; set; }
#nullable restore
#else
        public string AboutMe { get; set; }
#endif
        /// <summary>Flags that identify a returned user&apos;s access levels in the account or project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_accessLevels? AccessLevels { get; set; }
#nullable restore
#else
        public global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_accessLevels AccessLevels { get; set; }
#endif
        /// <summary>The timestamp when the user was first given access to any product on the project.</summary>
        public DateTimeOffset? AddedOn { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The user&apos;s address line 1. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine1 { get; set; }
#nullable restore
#else
        public string AddressLine1 { get; set; }
#endif
        /// <summary>The user&apos;s address line 2. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine2 { get; set; }
#nullable restore
#else
        public string AddressLine2 { get; set; }
#endif
        /// <summary>Not relevant</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AnalyticsId { get; set; }
#nullable restore
#else
        public string AnalyticsId { get; set; }
#endif
        /// <summary>The ID of the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutodeskId { get; set; }
#nullable restore
#else
        public string AutodeskId { get; set; }
#endif
        /// <summary>The User&apos;s city. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>The ID of the company that the user is representing in the project. To obtain a list of all company IDs associated with a project, call `GET projects/:projectId/companies &lt;/en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/&gt;`_.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyId { get; set; }
#nullable restore
#else
        public string CompanyId { get; set; }
#endif
        /// <summary>The name of the company to which the user belongs.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyName { get; set; }
#nullable restore
#else
        public string CompanyName { get; set; }
#endif
        /// <summary>The user&apos;s country. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The email of the user.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The user&apos;s first name. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>The ACC ID of the user.</summary>
        public Guid? Id { get; set; }
        /// <summary>The URL of the user&apos;s avatar. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>The industry the user works in. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Industry { get; set; }
#nullable restore
#else
        public string Industry { get; set; }
#endif
        /// <summary>The user&apos;s job title. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobTitle { get; set; }
#nullable restore
#else
        public string JobTitle { get; set; }
#endif
        /// <summary>The user&apos;s last name. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>The full name of the user.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The user&apos;s phone number. This data syncs from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_phone? Phone { get; set; }
#nullable restore
#else
        public global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_phone Phone { get; set; }
#endif
        /// <summary>The zip or postal code of the user. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; set; }
#nullable restore
#else
        public string PostalCode { get; set; }
#endif
        /// <summary>Information about the products activated in the specified project for this user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_products>? Products { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_products> Products { get; set; }
#endif
        /// <summary>A list of IDs of the roles that the user belongs to in the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RoleIds { get; set; }
#nullable restore
#else
        public List<string> RoleIds { get; set; }
#endif
        /// <summary>A list of the role IDs and names that are associated with the user in the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_roles>? Roles { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_roles> Roles { get; set; }
#endif
        /// <summary>The state or province of the user. The accepted values here change depending on which country is provided. This data syncs from the user&apos;s Autodesk profile.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateOrProvince { get; set; }
#nullable restore
#else
        public string StateOrProvince { get; set; }
#endif
        /// <summary>The status of the user in the project. A pending user could be waiting for their products to activate, or the user hasn&apos;t accepted an email to create an account with Autodesk.Possible values:- ``active``: The user has been added to the project.- ``pending``: The user is in the process of being added to the project.- ``disabled``: The user has been temporarily suspended from the project.- ``deleted``: The user has been removed from the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>The timestamp when the project user was last updated, in ISO 8601 format.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results"/> and sets the default values.
        /// </summary>
        public UsersGetResponse_results()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aboutMe", n => { AboutMe = n.GetStringValue(); } },
                { "accessLevels", n => { AccessLevels = n.GetObjectValue<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_accessLevels>(global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_accessLevels.CreateFromDiscriminatorValue); } },
                { "addedOn", n => { AddedOn = n.GetDateTimeOffsetValue(); } },
                { "addressLine1", n => { AddressLine1 = n.GetStringValue(); } },
                { "addressLine2", n => { AddressLine2 = n.GetStringValue(); } },
                { "analyticsId", n => { AnalyticsId = n.GetStringValue(); } },
                { "autodeskId", n => { AutodeskId = n.GetStringValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "companyId", n => { CompanyId = n.GetStringValue(); } },
                { "companyName", n => { CompanyName = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "firstName", n => { FirstName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "imageUrl", n => { ImageUrl = n.GetStringValue(); } },
                { "industry", n => { Industry = n.GetStringValue(); } },
                { "jobTitle", n => { JobTitle = n.GetStringValue(); } },
                { "lastName", n => { LastName = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetObjectValue<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_phone>(global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_phone.CreateFromDiscriminatorValue); } },
                { "postalCode", n => { PostalCode = n.GetStringValue(); } },
                { "products", n => { Products = n.GetCollectionOfObjectValues<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_products>(global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_products.CreateFromDiscriminatorValue)?.AsList(); } },
                { "roleIds", n => { RoleIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "roles", n => { Roles = n.GetCollectionOfObjectValues<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_roles>(global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_roles.CreateFromDiscriminatorValue)?.AsList(); } },
                { "stateOrProvince", n => { StateOrProvince = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("aboutMe", AboutMe);
            writer.WriteObjectValue<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_accessLevels>("accessLevels", AccessLevels);
            writer.WriteDateTimeOffsetValue("addedOn", AddedOn);
            writer.WriteStringValue("addressLine1", AddressLine1);
            writer.WriteStringValue("addressLine2", AddressLine2);
            writer.WriteStringValue("analyticsId", AnalyticsId);
            writer.WriteStringValue("autodeskId", AutodeskId);
            writer.WriteStringValue("city", City);
            writer.WriteStringValue("companyId", CompanyId);
            writer.WriteStringValue("companyName", CompanyName);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("firstName", FirstName);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("imageUrl", ImageUrl);
            writer.WriteStringValue("industry", Industry);
            writer.WriteStringValue("jobTitle", JobTitle);
            writer.WriteStringValue("lastName", LastName);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_phone>("phone", Phone);
            writer.WriteStringValue("postalCode", PostalCode);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_products>("products", Products);
            writer.WriteCollectionOfPrimitiveValues<string>("roleIds", RoleIds);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.AccountAdmin.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse_results_roles>("roles", Roles);
            writer.WriteStringValue("stateOrProvince", StateOrProvince);
            writer.WriteStringValue("status", Status);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
