// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.Item;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users
{
    /// <summary>
    /// Builds and executes requests for operations under \construction\admin\v1\projects\{projectId}\users
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UsersRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Autodesk.ACC.AccountAdmin.ACC.construction.admin.v1.projects.item.users.item collection</summary>
        /// <param name="position">The ID of the user. To find the ID call `GET users &lt;/en/docs/acc/v1/reference/http/admin-projectsprojectId-users-GET/&gt;`_. You can use either the ACC ID (``id``) or the Autodesk ID (``autodeskId``).</param>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.Item.WithUserItemRequestBuilder"/></returns>
        public global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.Item.WithUserItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("userId", position);
                return new global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.Item.WithUserItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UsersRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/construction/admin/v1/projects/{projectId}/users{?fields*,filterTextMatch*,filter%5BaccessLevels%5D*,filter%5BautodeskId%5D*,filter%5BcompanyId%5D*,filter%5BcompanyName%5D*,filter%5Bemail%5D*,filter%5Bid%5D*,filter%5Bname%5D*,filter%5Bproducts%5D*,filter%5BroleId%5D*,filter%5BroleIds%5D*,filter%5Bstatus%5D*,limit*,offset*,orFilters*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UsersRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/construction/admin/v1/projects/{projectId}/users{?fields*,filterTextMatch*,filter%5BaccessLevels%5D*,filter%5BautodeskId%5D*,filter%5BcompanyId%5D*,filter%5BcompanyName%5D*,filter%5Bemail%5D*,filter%5Bid%5D*,filter%5Bname%5D*,filter%5Bproducts%5D*,filter%5BroleId%5D*,filter%5BroleIds%5D*,filter%5Bstatus%5D*,limit*,offset*,orFilters*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves information about a filtered subset of users in the specified project.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse?> GetAsUsersGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder.UsersRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse> GetAsUsersGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder.UsersRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersGetResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves information about a filtered subset of users in the specified project.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use GetAsUsersGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse?> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder.UsersRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder.UsersRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Assigns a user to the specified project.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostResponse?> PostAsUsersPostResponseAsync(global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostResponse> PostAsUsersPostResponseAsync(global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Assigns a user to the specified project.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use PostAsUsersPostResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse?> PostAsync(global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse> PostAsync(global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse>(requestInfo, global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves information about a filtered subset of users in the specified project.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder.UsersRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder.UsersRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Assigns a user to the specified project.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves information about a filtered subset of users in the specified project.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UsersRequestBuilderGetQueryParameters 
        {
            /// <summary>A list of the project fields to include in the response. Default value: all fields.Possible values: ``name``, ``email``, ``firstName``, ``lastName``, ``autodeskId``, ``analyticsId``, ``addressLine1``, ``addressLine2``, ``city``, ``stateOrProvince``, ``postalCode``, ``country``, ``imageUrl``, ``phone``, ``jobTitle``, ``industry``, ``aboutMe``, ``companyId``, ``accessLevels``, ``roleIds``, ``roles``, ``status``, ``addedOn`` and ``products``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("fields")]
            public string[]? Fields { get; set; }
#nullable restore
#else
            [QueryParameter("fields")]
            public string[] Fields { get; set; }
#endif
            /// <summary>A list of user access levels that the returned users must have.Possible values: ``accouantAdmin``, ``projectAdmin``, ``executive``.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BaccessLevels%5D")]
            public string[]? FilteraccessLevels { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BaccessLevels%5D")]
            public string[] FilteraccessLevels { get; set; }
#endif
            /// <summary>A list of the Autodesk IDs of users to retrieve.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BautodeskId%5D")]
            public string[]? FilterautodeskId { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BautodeskId%5D")]
            public string[] FilterautodeskId { get; set; }
#endif
            /// <summary>The ID of a company that the returned users must represent.Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BcompanyId%5D")]
            public string? FiltercompanyId { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BcompanyId%5D")]
            public string FiltercompanyId { get; set; }
#endif
            /// <summary>The name of a company that returned users must be associated with. Can be a partial match based on the value of ``filterTextMatch`` that you provide.For example: ``filter[companyName]=Sample filterTextMatch=startsWith``Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BcompanyName%5D")]
            public string? FiltercompanyName { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BcompanyName%5D")]
            public string FiltercompanyName { get; set; }
#endif
            /// <summary>A user email address or address pattern that the returned users must have. This can be a partial match based on the value of ``filterTextMatch`` that you provide.For example:``filter[email]=sample filterTextMatch=startsWith``Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bemail%5D")]
            public string? Filteremail { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bemail%5D")]
            public string Filteremail { get; set; }
#endif
            /// <summary>A list of the ACC IDs of users to retrieve.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bid%5D")]
            public string[]? Filterid { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bid%5D")]
            public string[] Filterid { get; set; }
#endif
            /// <summary>A user name or name pattern that the returned users must have. Can be a partial match based on the value of ``filterTextMatch`` that you provide.For example:``filter[name]=Sample filterTextMatch=startsWith``Max length: 255</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bname%5D")]
            public string? Filtername { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bname%5D")]
            public string Filtername { get; set; }
#endif
            /// <summary>A comma-separated list of the products that the returned users must have access to in the specified project. Only users that have access to one or more of the specified products are returned.Note that every product in the same account as the project is activated for the project, and a separate subset of these products is active for each user. This endpoint can retrieve users from ACC or BIM 360 projects.Some products are exclusive to ACC or to BIM 360, others are available on both platforms. Specify only the products on the appropriate platform for the users you want to retrieve.Possible ACC values: ``accountAdministration``, ``autoSpecs``, ``build``, ``buildingConnected``, ``capitalPlanning``, ``cloudWorksharing``, ``cost``, ``designCollaboration``, ``docs``, ``financials``, ``insight``, ``modelCoordination``, ``projectAdministration``, ``takeoff``, and ``workshopxr``.Possible BIM 360 values: ``accountAdministration``, ``assets``, ``cloudWorksharing``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bproducts%5D")]
            public string[]? Filterproducts { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bproducts%5D")]
            public string[] Filterproducts { get; set; }
#endif
            /// <summary>The ID of a user role that the returned users must have.To obtain a role ID for this filter, you can inspect the ``roleId`` field in previous responses to this endpoint or to the `GET projects/:projectId/users/:userId &lt;/en/docs/acc/v1/reference/http/admin-projects-projectId-users-userId-GET/&gt;`_ endpoint.Max length: 255</summary>
            [QueryParameter("filter%5BroleId%5D")]
            public Guid? FilterroleId { get; set; }
            /// <summary>A list of the IDs of user roles that the returned users must have.To obtain a role ID for this filter, you can inspect the ``roleId`` field in previous responses to this endpoint or to the `GET projects/:projectId/users/:userId &lt;/en/docs/acc/v1/reference/http/admin-projects-projectId-users-userId-GET/&gt;`_ endpoint.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BroleIds%5D")]
            public string[]? FilterroleIds { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BroleIds%5D")]
            public string[] FilterroleIds { get; set; }
#endif
            /// <summary>A list of statuses that the returned project users must be in. The default values are ``active`` and ``pending``.Possible values: ``active``, ``pending``, and ``deleted``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bstatus%5D")]
            public string[]? Filterstatus { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bstatus%5D")]
            public string[] Filterstatus { get; set; }
#endif
            /// <summary>Specifies how text-based filters should match values in supported fields.This parameter can be used in any endpoint that supports text-based filtering (e.g., ``filter[name]``, ``filter[jobNumber]``, ``filter[companyName]``, etc.).Possible values:``contains`` (default) – Matches if the field contains the specified text anywhere``startsWith`` – Matches if the field starts with the specified text``endsWith`` – Matches if the field ends with the specified text``equals`` – Matches only if the field exactly matches the specified textMatching is case-insensitive.Wildcards and regular expressions are not supported.</summary>
            [Obsolete("This property is deprecated, use FilterTextMatchAsGetFilterTextMatchQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filterTextMatch")]
            public string? FilterTextMatch { get; set; }
#nullable restore
#else
            [QueryParameter("filterTextMatch")]
            public string FilterTextMatch { get; set; }
#endif
            /// <summary>Specifies how text-based filters should match values in supported fields.This parameter can be used in any endpoint that supports text-based filtering (e.g., ``filter[name]``, ``filter[jobNumber]``, ``filter[companyName]``, etc.).Possible values:``contains`` (default) – Matches if the field contains the specified text anywhere``startsWith`` – Matches if the field starts with the specified text``endsWith`` – Matches if the field ends with the specified text``equals`` – Matches only if the field exactly matches the specified textMatching is case-insensitive.Wildcards and regular expressions are not supported.</summary>
            [QueryParameter("filterTextMatch")]
            public global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.GetFilterTextMatchQueryParameterType? FilterTextMatchAsGetFilterTextMatchQueryParameterType { get; set; }
            /// <summary>The maximum number of records to return in the response.Default: ``20``Minimum: ``1``Maximum: ``200`` (If a larger value is provided, only 200 records are returned)</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>The index of the first record to return.Used for pagination in combination with the ``limit`` parameter.Example: ``limit=20`` and ``offset=40`` returns records 41–60.</summary>
            [QueryParameter("offset")]
            public int? Offset { get; set; }
            /// <summary>A list of user fields to combine with the SQL *OR* operator for filtering the returned project users. The *OR* is automatically incorporated between the fields; any one of them can produce a valid match.Possible values: ``id``, ``name``, ``email``, ``autodeskId``, ``status`` and ``accessLevels``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("orFilters")]
            public string[]? OrFilters { get; set; }
#nullable restore
#else
            [QueryParameter("orFilters")]
            public string[] OrFilters { get; set; }
#endif
            /// <summary>A list of fields to sort the returned users by. Multiple sort fields are applied in sequence order - each sort field produces groupings of projects with the same values of that field; the next sort field applies within the groupings produced by the previous sort field.Each property can be followed by a direction modifier of either ``asc`` (ascending) or ``desc`` (descending). The default is ``asc``.Possible values: ``name``, ``email``, ``firstName``, ``lastName``, ``addressLine1``, ``addressLine2``, ``city``, ``companyName``, ``stateOrProvince``, ``status``, ``phone``, ``postalCode``, ``country`` and ``addedOn``. Default value: ``name``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UsersRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Projects.Item.Users.UsersRequestBuilder.UsersRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UsersRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
