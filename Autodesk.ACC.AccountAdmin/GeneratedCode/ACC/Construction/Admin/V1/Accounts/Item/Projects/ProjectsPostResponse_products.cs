// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProjectsPostResponse_products : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The URL of the icon associated with the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Icon { get; set; }
#nullable restore
#else
        public string Icon { get; set; }
#endif
        /// <summary>A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects &lt;/en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/&gt;`_ and `GET projects/:projectId &lt;/en/docs/acc/v1/reference/http/admin-projects-projectId-GET/&gt;`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.</summary>
        public global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_key? Key { get; set; }
        /// <summary>The language for the project. Only valid for the ``field`` product.Possible values: ``en``, ``de``, ``nl``, ``zh``, ``de-CH``</summary>
        public global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_language? Language { get; set; }
        /// <summary>The name of the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The current status of the product. Possible values:- ``activating``: Product activation is in progress.- ``activationFailed``: Product activation has failed.- ``active``: Product activation is completed.- ``deactivating``: Product deactivation is in progress. (Applicable to BIM 360 only)- ``deactivationFailed``: Product deactivation has failed. (Applicable to BIM 360 only)- ``inactive``: Product deactivation is completed. (Applicable to BIM 360 only)- ``available``: Product is available for activation. (Applicable to BIM 360 only)</summary>
        public global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products"/> and sets the default values.
        /// </summary>
        public ProjectsPostResponse_products()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "icon", n => { Icon = n.GetStringValue(); } },
                { "key", n => { Key = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_key>(); } },
                { "language", n => { Language = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_language>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("icon", Icon);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_key>("key", Key);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_language>("language", Language);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.ACC.Construction.Admin.V1.Accounts.Item.Projects.ProjectsPostResponse_products_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
